default:
  image: python:3.12

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# https://pip.pypa.io/en/stable/topics/caching/
cache:
  paths:
    - .cache/pip

before_script:
  - python --version ; pip --version  # For debugging
  - pip install nox


stages:
  - build
  - test
  - deploy

.common_rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH =~ /master|staging|develop/
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

build:
  extends:
    - .common_rules
  stage: build
  script: echo "Building!"

unit-tests:
  extends:
    - .common_rules
  stage: test
  script: nox -s unit_tests

smoke-tests:
  extends:
    - .common_rules
  stage: test
  script: nox -s smoke_tests

.deploy_base:
  stage: deploy
  variables:
    AUTOPILOT_INCREMENT: "patch"
  script:
   - echo "Deploying $TARGET_BRANCH!"
   - nox -s ci_autotag --force-color -- --increment $AUTOPILOT_INCREMENT
  # releases must be performed serially, in order
  resource_group: "$TARGET_BRANCH"
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH == $TARGET_BRANCH

deploy-master:
  extends: .deploy_base
  variables:
    TARGET_BRANCH: master

deploy-staging:
  extends: .deploy_base
  variables:
    TARGET_BRANCH: staging

deploy-develop:
  extends: .deploy_base
  variables:
    TARGET_BRANCH: develop

.automerge_base:
  # always runs last
  stage: .post
  # it's ok if auto-merge does not succeed
  allow_failure: true
  script:
   - nox -s ci_automerge --force-color
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH == $TARGET_BRANCH && $AUTOPILOT_SKIP_AUTOMERGE != "true"

merge-master-to-staging:
  extends: .automerge_base
  variables:
    TARGET_BRANCH: master

merge-staging-to-develop:
  extends: .automerge_base
  variables:
    TARGET_BRANCH: staging

make-release:
  stage: deploy
  script:
   - nox -s ci_release --force-color
  rules:
    # add option to manually run release on staging pipelines: will convert the latest version on staging to a release
    - if: $CI_COMMIT_BRANCH == "staging" && $CI_PIPELINE_SOURCE != "schedule" && $CI_PIPELINE_SOURCE == "push"
      when: manual
      # allow_failure: true is required to prevent this job from blocking the pipeline.
      # Feature request: https://gitlab.com/gitlab-org/gitlab/-/issues/28036
      allow_failure: true
    - if: $CI_PIPELINE_SOURCE == "schedule" && $SCHEDULED_JOB_NAME == "make-release"
      when: manual
