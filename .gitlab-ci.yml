default:
  image: python:3.12

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  GITFLOW_STABLE_BRANCH: "master"
  GITFLOW_RC_BRANCH: "staging"
  GITFLOW_BETA_BRANCH: "develop"
  GITFLOW_BRANCHES: "(^$GITFLOW_STABLE_BRANCH$|^$GITFLOW_RC_BRANCH$|^$GITFLOW_BETA_BRANCH$)"
  GITFLOW_TAG_ANNOTATION: "automatic change detected"

# https://pip.pypa.io/en/stable/topics/caching/
cache:
  paths:
    - .cache/pip

before_script:
  - |
    git config --global user.email "fake@email.com"
    git config --global user.name "ci-bot"
    python --version ; pip --version  # For debugging
    pip install -r requirements.txt


stages:
  - build
  - test
  - auto-tag
  - promote

.common_rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: '$CI_COMMIT_BRANCH =~ $GITFLOW_BRANCHES'
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

build:
  extends:
    - .common_rules
  stage: build
  script: echo "Building!"

unit-tests:
  extends:
    - .common_rules
  stage: test
  script: nox -s unit_tests

smoke-tests:
  extends:
    - .common_rules
  stage: test
  script: nox -s smoke_tests

.auto-tag-base:
  stage: auto-tag
  script:
   - echo "Deploying $TARGET_BRANCH!"
   - nox -s autotag -v --force-color -- --annotation "$GITFLOW_TAG_ANNOTATION"
  # releases must be performed serially, in order
  resource_group: "$TARGET_BRANCH"
  rules:
    - if: '$CI_COMMIT_TAG'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $TARGET_BRANCH'
      changes:
        - "**/*"
      when: always

auto-tag-beta:
  extends: .auto-tag-base
  variables:
    TARGET_BRANCH: $GITFLOW_STABLE_BRANCH

auto-tag-rc:
  extends: .auto-tag-base
  variables:
    TARGET_BRANCH: $GITFLOW_RC_BRANCH

auto-tag-stable:
  extends: .auto-tag-base
  variables:
    TARGET_BRANCH: $GITFLOW_BETA_BRANCH

.hotfix-base:
  # always runs last
  stage: .post
  # it's ok if auto-hotfix does not succeed
  allow_failure: true
  script:
   - nox -s hotfix --force-color
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" || $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $TARGET_BRANCH && $GITFLOW_SKIP_HOTFIX != "true"

hotfix-stable-to-rc:
  extends: .hotfix-base
  variables:
    TARGET_BRANCH: $GITFLOW_STABLE_BRANCH

hotfix-rc-to-beta:
  extends: .hotfix-base
  variables:
    TARGET_BRANCH: $GITFLOW_RC_BRANCH

promote:
  stage: promote
  resource_group: promote
  script:
   - nox -s promote --force-color
  rules:
    # add option to manually run promote on rc pipelines: will convert the latest version on rc to promote
    - if: $CI_COMMIT_BRANCH == $GITFLOW_RC_BRANCH && $CI_PIPELINE_SOURCE != "schedule" && $CI_PIPELINE_SOURCE == "push"
      when: manual
      # allow_failure: true is required to prevent this job from blocking the pipeline.
      # Feature request: https://gitlab.com/gitlab-org/gitlab/-/issues/28036
      allow_failure: true
    - if: $CI_PIPELINE_SOURCE == "schedule" && $SCHEDULED_JOB_NAME == "promote"
      when: manual


pages:
  script:
    - nox -s docs
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $GITFLOW_BETA_BRANCH
      when: always

