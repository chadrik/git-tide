default:
  image: python:3.11

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# https://pip.pypa.io/en/stable/topics/caching/
cache:
  paths:
    - .cache/pip

before_script:
  - |
    python --version ; pip --version  # For debugging
    pip install -r requirements.txt
    git log --graph --abbrev-commit --oneline --all --decorate

stages:
  - build
  - test
  - monoflow

# --- standard monoflow configuration below here ---

.common_rules:
  # provided for convenience: not used by monoflow
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" || $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_REF_PROTECTED == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

.monoflow-base:
  stage: monoflow
  before_script:
    - pip install -e .

auto-tag:
  extends: .monoflow-base
  script:
   - echo "Deploying $CI_COMMIT_BRANCH!"
   - monoflow autotag --annotation "$MONOFLOW_AUTOTAG_ANNOTATION"
  # must be performed serially, in order.
  resource_group: $CI_COMMIT_BRANCH
  variables:
    MONOFLOW_AUTOTAG_ANNOTATION: $CI_COMMIT_TITLE
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" || $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_REF_PROTECTED == "true"

.hotfix-base:
  extends: .monoflow-base
  # always runs last
  stage: .post
  # it's ok if hotfix does not succeed
  allow_failure: true
  script:
   - monoflow hotfix
  # must be performed serially, in order.
  resource_group: $CI_COMMIT_BRANCH
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" || $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $TARGET_BRANCH && $MONOFLOW_SKIP_HOTFIX != "true"

hotfix-master-to-staging:
  extends: .hotfix-base
  variables:
    TARGET_BRANCH: master

hotfix-staging-to-develop:
  extends: .hotfix-base
  variables:
    TARGET_BRANCH: staging

promote:
  extends: .monoflow-base
  resource_group: promote
  script:
   - monoflow promote
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" && $SCHEDULED_JOB_NAME == "promote"

# --- end standard monoflow configuration  --

# debug:
#   stage: build
#   script: env

# build:
#   extends:
#     - .common_rules
#   stage: build
#   script: echo "Building!"

unit-tests:
  extends:
    - .common_rules
  stage: test
  script: echo "Testing!"
#   script: nox -s unit_tests

smoke-tests:
  extends:
    - .common_rules
  stage: test
  script: echo "Testing!"
#   script: nox -s smoke_tests
